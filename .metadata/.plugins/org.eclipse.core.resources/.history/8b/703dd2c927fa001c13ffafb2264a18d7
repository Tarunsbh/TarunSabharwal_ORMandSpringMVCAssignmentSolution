package com.greatlearning.crm.repository;

import java.util.List;

import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.greatlearning.crm.model.Customer;

@Repository
public class CustomerRepository {

	private Session session;

	@Autowired
	public CustomerRepository(SessionFactory sessionFactory) {
		this.session = sessionFactory.openSession();
		try {
			session = sessionFactory.getCurrentSession();
		} catch (HibernateException e) {
			session = sessionFactory.openSession();
		}
	}

	@Transactional
	public List<Customer> findAll() {
		Transaction tx = session.beginTransaction();
		List<Customer> customerList = session.createQuery("from Customer", Customer.class).list();
		tx.commit();
		return customerList;
	}

	@Transactional
	public Customer findById(int id) {
		Transaction tx = session.beginTransaction();
		Customer customer = session.get(Customer.class, id);
		tx.commit();
		return customer;

	}
	
	@Trasactional
	public void save(Customer theCusotmer) {
		Transaction tx = session.beginTransaction();
		session.saveOrUpdate(theCustomer);
		tx.commit();
	}

}
